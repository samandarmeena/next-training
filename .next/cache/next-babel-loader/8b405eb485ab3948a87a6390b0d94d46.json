{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/gwl/SAMANDAR/next-training/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport MyLayout from '../components/MyLayout';\nimport fetch from 'unfetch';\nimport useSWR from 'swr'; // import fetch from 'isomorphic-unfetch';\n// const Index = ({ stars }) => {\n//   return (\n//     <MyLayout>\n//       <p>Next stars: {stars}</p>\n//     </MyLayout>\n//   );\n// };\n// Index.getInitialProps = async ({ req }) => {\n//   const res = await fetch('https://api.github.com/repos/zeit/next.js');\n//   const json = res.json();\n//   return { stars: json.stargazers_count };\n// };\n\nvar API_URL = 'https://api.github.com';\n\nvar fetcher = function fetcher(path) {\n  var res, json;\n  return _regeneratorRuntime.async(function fetcher$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(API_URL + path));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          json = _context.sent;\n          return _context.abrupt(\"return\", json);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nvar Index = function Index() {\n  var _useSWR = useSWR('/repos/zeit/next.js', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  __jsx(MyLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, !data ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"loading...\") : ''(error) ? __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"failed to load\") : '');\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/gwl/SAMANDAR/next-training/pages/index.js"],"names":["MyLayout","fetch","useSWR","API_URL","fetcher","path","res","json","Index","data","error"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,OAAO,GAAG,wBAAhB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIJ,KAAK,CAACE,OAAO,GAAGE,IAAX,CADT;;AAAA;AACRC,UAAAA,GADQ;AAAA;AAAA,2CAEKA,GAAG,CAACC,IAAJ,EAFL;;AAAA;AAERA,UAAAA,IAFQ;AAAA,2CAGPA,IAHO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,gBACMN,MAAM,CAAC,qBAAD,EAAwBE,OAAxB,CADZ;AAAA,MACVK,IADU,WACVA,IADU;AAAA,MACJC,KADI,WACJA,KADI;;AAElB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,CAACD,IAAD,GAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAR,GAAgC,GAAGC,KAAH,IAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAZ,GAAwC,EAF3E;AAID,CAND;;AAOA,eAAeF,KAAf","sourcesContent":["import MyLayout from '../components/MyLayout';\nimport fetch from 'unfetch';\nimport useSWR from 'swr';\n// import fetch from 'isomorphic-unfetch';\n// const Index = ({ stars }) => {\n//   return (\n//     <MyLayout>\n//       <p>Next stars: {stars}</p>\n//     </MyLayout>\n//   );\n// };\n// Index.getInitialProps = async ({ req }) => {\n//   const res = await fetch('https://api.github.com/repos/zeit/next.js');\n//   const json = res.json();\n//   return { stars: json.stargazers_count };\n// };\nconst API_URL = 'https://api.github.com';\nconst fetcher = async path => {\n  const res = await fetch(API_URL + path);\n  const json = await res.json();\n  return json;\n};\nconst Index = () => {\n  const { data, error } = useSWR('/repos/zeit/next.js', fetcher);\n  <MyLayout>\n    {}\n    {!data ? <div>loading...</div> : ''(error) ? <div>failed to load</div> : ''}\n  </MyLayout>;\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}