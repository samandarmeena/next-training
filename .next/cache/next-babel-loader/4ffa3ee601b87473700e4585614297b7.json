{"ast":null,"code":"var _jsxFileName = \"/home/gwl/SAMANDAR/next-training/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport MyLayout from '../components/MyLayout';\nimport { useReducer } from 'react';\nvar initialState = {\n  count: 0\n};\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return {\n        count: state.count + 1\n      };\n\n    case 'decrement':\n      return {\n        count: state.count - 1\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\nvar about = function about() {\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(MyLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Count : \", state.count, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"This is the about page \"));\n};\n\nexport default about;","map":{"version":3,"sources":["/home/gwl/SAMANDAR/next-training/pages/about.js"],"names":["MyLayout","useReducer","initialState","count","reducer","state","action","type","Error","about","dispatch"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAAEA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAvB,OAAP;;AACF;AACE,YAAM,IAAIK,KAAJ,EAAN;AANJ;AAQD,CATD;;AAWA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,oBACQR,UAAU,CAACG,OAAD,EAAUF,YAAV,CADlB;AAAA,MACXG,KADW;AAAA,MACJK,QADI;;AAElB,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACWL,KAAK,CAACF,KADjB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CADF;AAMD,CARD;;AASA,eAAeM,KAAf","sourcesContent":["import MyLayout from '../components/MyLayout';\nimport { useReducer } from 'react';\nconst initialState = { count: 0 };\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    case 'decrement':\n      return { count: state.count - 1 };\n    default:\n      throw new Error();\n  }\n};\n\nconst about = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <MyLayout>\n      Count : {state.count}\n      <p>This is the about page </p>\n    </MyLayout>\n  );\n};\nexport default about;\n"]},"metadata":{},"sourceType":"module"}