{"ast":null,"code":"var _jsxFileName = \"/home/gwl/SAMANDAR/next-training/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport MyLayout from '../components/MyLayout';\nimport fetch from 'unfetch';\nimport useSWR from 'swr'; // import fetch from 'isomorphic-unfetch';\n// const Index = ({ stars }) => {\n//   return (\n//     <MyLayout>\n//       <p>Next stars: {stars}</p>\n//     </MyLayout>\n//   );\n// };\n// Index.getInitialProps = async ({ req }) => {\n//   const res = await fetch('https://api.github.com/repos/zeit/next.js');\n//   const json = res.json();\n//   return { stars: json.stargazers_count };\n// };\n\nconst API_URL = 'https://api.github.com';\n\nconst fetcher = async path => {\n  const res = await fetch(API_URL + path);\n  const json = await res.json();\n  return json;\n};\n\nconst Index = () => {\n  const {\n    data,\n    error\n  } = useSWR('/repos/zeit/next.js', fetcher);\n\n  __jsx(MyLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  });\n\n  if (error) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"failed to load\");\n  if (!data) return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"loading...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Next stars: \", data.stargazers_count);\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/gwl/SAMANDAR/next-training/pages/index.js"],"names":["MyLayout","fetch","useSWR","API_URL","fetcher","path","res","json","Index","data","error","stargazers_count"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAG,wBAAhB;;AACA,MAAMC,OAAO,GAAG,MAAMC,IAAN,IAAc;AAC5B,QAAMC,GAAG,GAAG,MAAML,KAAK,CAACE,OAAO,GAAGE,IAAX,CAAvB;AACA,QAAME,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACA,SAAOA,IAAP;AACD,CAJD;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBR,MAAM,CAAC,qBAAD,EAAwBE,OAAxB,CAA9B;;AACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA,MAAIM,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAkBA,IAAI,CAACE,gBAAvB,CAAP;AACD,CAND;;AAOA,eAAeH,KAAf","sourcesContent":["import MyLayout from '../components/MyLayout';\nimport fetch from 'unfetch';\nimport useSWR from 'swr';\n// import fetch from 'isomorphic-unfetch';\n// const Index = ({ stars }) => {\n//   return (\n//     <MyLayout>\n//       <p>Next stars: {stars}</p>\n//     </MyLayout>\n//   );\n// };\n// Index.getInitialProps = async ({ req }) => {\n//   const res = await fetch('https://api.github.com/repos/zeit/next.js');\n//   const json = res.json();\n//   return { stars: json.stargazers_count };\n// };\nconst API_URL = 'https://api.github.com';\nconst fetcher = async path => {\n  const res = await fetch(API_URL + path);\n  const json = await res.json();\n  return json;\n};\nconst Index = () => {\n  const { data, error } = useSWR('/repos/zeit/next.js', fetcher);\n  <MyLayout></MyLayout>;\n  if (error) return <div>failed to load</div>;\n  if (!data) return <div>loading...</div>;\n  return <div>Next stars: {data.stargazers_count}</div>;\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}