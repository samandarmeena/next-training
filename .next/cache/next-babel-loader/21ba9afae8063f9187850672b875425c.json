{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/home/gwl/SAMANDAR/next-training/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n//import fetch from 'unfetch';\n//import useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\nimport MyLayout from '../components/MyLayout';\n\nvar Index = function Index(_ref) {\n  var stars = _ref.stars;\n  return __jsx(MyLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Next stars: \", stars));\n};\n\nIndex.getInitialProps = function _callee(_ref2) {\n  var req, res, json;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          req = _ref2.req;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch('https://api.github.com/repos/zeit/next.js'));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          json = _context.sent;\n          return _context.abrupt(\"return\", {\n            stars: json.stargazers_count\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n}; // const API_URL = 'https://api.github.com';\n// const fetcher = async path => {\n//   const res = await fetch(API_URL + path);\n//   const json = await res.json();\n//   return json;\n// };\n// const Index = () => {\n//   const { data, error } = useSWR('/repos/zeit/next.js', fetcher);\n//   if (error) return <div>failed to load</div>;\n//   if (!data) return <div>loading...</div>;\n//   return <div>Next stars: {data.stargazers_count}</div>;\n// };\n\n\nexport default Index;","map":{"version":3,"sources":["/home/gwl/SAMANDAR/next-training/pages/index.js"],"names":["fetch","MyLayout","Index","stars","getInitialProps","req","res","json","stargazers_count"],"mappings":";;;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC3B,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBA,KAAhB,CADF,CADF;AAKD,CAND;;AAOAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,GAAT,SAASA,GAAT;AAAA;AAAA,2CACJL,KAAK,CAAC,2CAAD,CADD;;AAAA;AAChBM,UAAAA,GADgB;AAAA;AAAA,2CAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBA,UAAAA,IAFgB;AAAA,2CAGf;AAAEJ,YAAAA,KAAK,EAAEI,IAAI,CAACC;AAAd,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeN,KAAf","sourcesContent":["//import fetch from 'unfetch';\n//import useSWR from 'swr';\nimport fetch from 'isomorphic-unfetch';\nimport MyLayout from '../components/MyLayout';\nconst Index = ({ stars }) => {\n  return (\n    <MyLayout>\n      <p>Next stars: {stars}</p>\n    </MyLayout>\n  );\n};\nIndex.getInitialProps = async ({ req }) => {\n  const res = await fetch('https://api.github.com/repos/zeit/next.js');\n  const json = await res.json();\n  return { stars: json.stargazers_count };\n};\n// const API_URL = 'https://api.github.com';\n// const fetcher = async path => {\n//   const res = await fetch(API_URL + path);\n//   const json = await res.json();\n//   return json;\n// };\n// const Index = () => {\n//   const { data, error } = useSWR('/repos/zeit/next.js', fetcher);\n//   if (error) return <div>failed to load</div>;\n//   if (!data) return <div>loading...</div>;\n//   return <div>Next stars: {data.stargazers_count}</div>;\n// };\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}